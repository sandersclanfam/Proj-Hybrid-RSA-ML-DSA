cmake_minimum_required(VERSION 3.16)
set(CMAKE_CXX_STANDARD 17) 

project(pqc C CXX)

set(SANITIZE OFF CACHE BOOL "Use address sanitizer")
set(COVERAGE OFF CACHE BOOL "Use code coverage")
set(HASWELL OFF CACHE BOOL "Use MOVBE, MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, CX16, SAHF, FXSR, AVX, XSAVE, PCLMUL, FSGSBASE, RDRND, F16C, AVX2, BMI, BMI2, LZCNT, FMA, MOVBE and HLE")

set(BENCHMARK ON CACHE BOOL "Build benchmark")
set(PYTHON ON CACHE BOOL "Build Python module")
set(EXAMPLES ON CACHE BOOL "Build examples")
set(TESTS ON CACHE BOOL "Build tests")

if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "AppleClang")
    set(COMPILER_CLANG ON)
    file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/compiler.id" "Clang")
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    set(COMPILER_GCC ON)
    file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/compiler.id" "GCC")
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
    set(COMPILER_MSVC ON)
    file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/compiler.id" "MSVC")
endif()

if(COMPILER_CLANG)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_LIBCPP_DEBUG")
elseif(COMPILER_GCC)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_GLIBCXX_DEBUG")
endif()

if(SANITIZE)
    if(COMPILER_CLANG OR COMPILER_GCC)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=address -fsanitize-address-use-after-scope -fno-omit-frame-pointer")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address -fsanitize-address-use-after-scope -fno-omit-frame-pointer")
    endif()
endif()

if(COVERAGE)
    if(COMPILER_CLANG OR COMPILER_GCC)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} --coverage")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --coverage")
    endif()
endif()

if(HASWELL)
    if(COMPILER_CLANG OR COMPILER_GCC)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -march=haswell")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=haswell")
    elseif(COMPILER_MSVC)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /arch:AVX2")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:AVX2")
    endif()
endif()

if(COMPILER_CLANG OR COMPILER_GCC)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Werror")
elseif(COMPILER_MSVC)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W4 /WX /wd4100")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4 /WX /wd4100")
endif()

if(PYTHON OR TESTS)
    enable_testing()
endif()

add_subdirectory(src)

if(PYTHON)
    add_subdirectory(python)
endif()

if(TESTS)
    add_subdirectory(test)
endif()

if(EXAMPLES)
    add_subdirectory(examples)
endif()

if(BENCHMARK)
    add_subdirectory(benchmark)
endif()
